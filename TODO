Fix:

Code:
  ☐ add more examples in docstrings
  ☐ Luhn validator https://guptaavi352.medium.com/ctflearn-writeups-9f247c2fe94c

New ideas:
  ☐ rubber ducky encode/decode
  ☐ save registers https://t.co/pBNRufibY8?amp=1 
  ☐ cbor encode/decode https://github.com/agronholm/cbor2 (plugin)
  ☐ fuzzy search
  ☐ pgp, generate, encrypt, decrypt, verify
  ☐ swap little and big endian
  ☐ ignore error method
  ☐ swap bytes
  ☐ @high disable plugins from code
  ☐ homophonic decoder
  ☐ append method for core to add data to the state
  ☐ qr create 
  ☐ random from state
  ☐ ascii shift cipher kqfl ? snyjHYK"8fwymdxf~xdm8qq5$ = niteCTF{3arth_says_h3ll0} somewhat
  ☐ ✨ affine bruteforce
  ☐ ✨ zero-width encode
  ☐ ✨ hill cipher encode/decode/brute
  ☐ 💡 maybe a decorator function to convert all inputs into bytes when possible? this will allow for a consistant bytes approach to all functions
  ☐ ✨ jwt hmac confusion
  ☐ ✨ amf encode/decode
  ☐ ✨ rabbit encryption
  ☐ ✨ aes cmac
  ☐ ✨ cetacean encode/decode
  ☐ ✨ whitespace encoding https://www.dcode.fr/whitespace-language
  ☐ ✨ huffman encode/decode
  ☐ ✨ new plugin that can help detect encoding type trained on random data
  ✨ upside down writing

Bug:

Extras:
  ☐ xor two files

Cli:
  ☐ optionally show output window in a split screen window
  ☐ lower the chepy prompt lower. that empty space is not being used
  ☐ write to file with prompt toolkit path autocomplete
  ☐ pipe input to chepy

Enhance:

Plugins:

Methods:
  ☐ magic method from cyberchef
  ☐ base 62
  ☐ base 92

Github Actions:

Distribution:
  ☐ request to add to kali
  ☐ request to add to brew

Misc:
  ☐ cyberchef recipe to chepy recipe converter

Archive:
  ✔ ✨ bacon encode/decode
  ✔ rsa enc/dec with key or from pem directly
  ✔ ✨ to/from pickle
  ✔ ✨ ls47 enc/dec
  ✔ ✨ shuffle
  ✔ 🚀 add crib for xor bruteforce
  ✔ ✨ twin hex encoder/decoder
  ✔ ✨ base36 encoder decoder
  ✔ ✨ decorator that will show warning message if unexpected results in stdout
  ✔ ✨ concat method
  ✔ ✨ nt hash
  ✔ ✨ lm hash
  ✔ ✨ lz4 compression/decompression
  ✔ 🚀 improve aes ctr enc/dec to handle iv
  ✔ stringify method using json.dumps
  ✔ jwt none algo
  ✔ ✨ extractor partially done
  ✔ vigenere make aware of all cases/numbers/specials. i.e. npcdhzaon{a4Rmp!_K1N5q0p_4vQfKkT1uA3R} key victory shaktictf{y4Yyy!_M1S5i0n_4cCoMpL1sH3D}
  ✔ us-ascii 7bit 20127 https://gchq.github.io/CyberChef/#recipe=Encode_text('US-ASCII%20(7-bit)%20(20127)') 걳걵걮걻걢갴걳갳걟갱갲갸걟갱갵걟걢갱건걟걲갳걭갴거거갱걮걧걽
  ✔ rot8000
  ✔ base decode all bases
  ✔ rename base64 function to from_basexx
